# -*- coding: utf-8 -*-
"""Assembly transition Matrix.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16V1bu2TwOKsXv73fbSdsQazUIdF9qsuE
"""

import numpy as np
import pandas as pd

A = int(input("파츠 수 : "))
list1 = []
for i in range(A):
    list1.append(chr(ord('A') + i))
input = [list(map(int, input("파츠들의 관계 : ").split())) for _ in range(A)]

df = pd.DataFrame(input, columns=list1, index=list1)
df

for i in range(1, len(df)):
    df.iloc[i:, i-1] = 0
df

start_nodes = df.index.to_list()
start_nodes

assembly = []
assembly.append(start_nodes)
assembly

# 파츠 연결


def append_solve(array):
    list1 = []
    for element in assembly[-1]:
        for i, value in enumerate(df.loc[element[-1]]):
            if value == 1:
                list1.append(element+df.columns[i])
    return list1


for i in range(len(df)-1):
    assembly.append(append_solve(assembly))

assembly

new_assembly = []
new_assembly.append(assembly[0])
for i in range(1, len(assembly)):
    for j in assembly[i]:
        new_assembly.append(j)
new_assembly

matrix = np.zeros((len(new_assembly), len(new_assembly)), dtype=int)
for i in range(len(new_assembly)):
    for j in range(i+1, len(new_assembly)):
        if i == 0 and len(new_assembly[j]) == 2:
            matrix[i][j] = 1
        elif len(new_assembly[i])+1 == len(new_assembly[j]):
            for x in new_assembly[i]:
                if x in new_assembly[j]:
                    matrix[i][j] = 1
                else:
                    matrix[i][j] = 0
                    break
        else:
            matrix[i][j] = 0
matrix

for x in range(1, len(assembly)):
    for y in range(len(assembly[x])):
        for z in range(A):
            if chr(65+z) not in sorted(assembly[x][y]):
                assembly[x][y] = assembly[x][y]+'/'+chr(65+z)
assembly

data = []
assembly[0] = "/".join(assembly[0])
data.append(assembly[0])
for i in range(1, len(assembly)):
    for j in assembly[i]:
        data.append(j)
data

final_df = pd.DataFrame(data=matrix, columns=data, index=data)
print(final_df)
